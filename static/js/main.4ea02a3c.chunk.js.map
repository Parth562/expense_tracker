{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/filter/ExpensesFilter.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpenses/ExpenseForm.js","components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","Class","children","ExpenseItem","useState","title","amount","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","Math","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilterYear","filteredExpenses","filter","item","toString","NewExpenseFrom","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","newExpense","Date","onSaveExpenseData","onCancel","type","required","min","step","console","log","onClick","NewExpense","isEditing","setIsEditing","data","random","onAddExpense","DUMMY","App","setExpenses","newItem","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ea02a3c.chunk.js","sourcesContent":["import './ExpenseDate.css';\nimport React from 'react';\nconst ExpenseDate = (props) => {\n   const month = props.date.toLocaleString('hi-IN', { month: 'long' });\n   const day = props.date.toLocaleString('hi-IN', { day: '2-digit' });\n   const year = props.date.getFullYear();\n\n   return (\n      <div className=\"expense-date\">\n         <div className=\"expense-date__month\">{month}</div>\n         <div className=\"expense-date__year\">{year}</div>\n         <div className=\"expense-date__day\">{day}</div>\n      </div>\n   );\n};\n\nexport default ExpenseDate;\n","import './Card.css';\n\nfunction Card(props) {\n   const Class = 'card ' + props.className;\n   return <div className={Class}>{props.children}</div>;\n}\n\nexport default Card;\n","import './ExpenseItem.css';\nimport React, { useState } from 'react';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nconst ExpenseItem = (props) => {\n   const [title, setTitle] = useState(props.title);\n   // const clickHandler = () => {\n   //    setTitle('Updateddddd!!');\n   //    console.log(title);\n   // };\n   return (\n      <Card className=\"expense-item\">\n         <ExpenseDate date={props.date}></ExpenseDate>\n         <div className=\"expense-item__description\">\n            <h2>{props.title}</h2>\n            <div className=\"expense-item__price\">${props.amount}</div>\n         </div>\n      </Card>\n   );\n};\n\nexport default ExpenseItem;\n","import React, { useState } from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n   const selectedYearHandler = (event) => {\n      props.onChangeFilter(event.target.value);\n   };\n\n   return (\n      <div className=\"expenses-filter\">\n         <div className=\"expenses-filter__control\">\n            <label>Filter by year</label>\n            <select value={props.selected} onChange={selectedYearHandler}>\n               <option value=\"2022\">2022</option>\n               <option value=\"2021\">2021</option>\n               <option value=\"2020\">2020</option>\n               <option value=\"2019\">2019</option>\n            </select>\n         </div>\n      </div>\n   );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\nimport './ExpensesList.css';\nimport ExpenseItem from './ExpenseItem';\n\nconst ExpensesList = (props) => {\n   let expenseItemContents = <p>NO ITEM FOUND</p>;\n\n   if (props.items.length === 0) {\n      return <h2 className=\"expenses-list__fallback\">No Items Found!!!</h2>;\n   }\n\n   return (\n      <ul className=\"expenses-list\">\n         {props.items.map((expense) => (\n            <ExpenseItem\n               key={expense.id}\n               title={expense.title}\n               amount={expense.amount}\n               date={expense.date}\n            />\n         ))}\n      </ul>\n   );\n};\n\nexport default ExpensesList;\n","import React from 'react';\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n   let barFillHeight = '0%';\n\n   if (props.maxValue > 0) {\n      barFillHeight = (props.value / props.maxValue) * 100 + '%';\n   }\n   return (\n      <div className=\"chart-bar\">\n         <div className=\"chart-bar__inner\">\n            <div\n               className=\"chart-bar__fill\"\n               style={{ height: barFillHeight }}\n            ></div>\n         </div>\n         <div className=\"chart-bar__label\">{props.label}</div>\n      </div>\n   );\n};\n\nexport default ChartBar;\n","import React from 'react';\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n   const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n   const totalMaximum = Math.max(...dataPointValues);\n   return (\n      <div className=\"chart\">\n         {props.dataPoints.map((dataPoint) => (\n            <ChartBar\n               key={dataPoint.label}\n               value={dataPoint.value}\n               maxValue={totalMaximum}\n               label={dataPoint.label}\n            />\n         ))}\n      </div>\n   );\n};\n\nexport default Chart;\n","import React from 'react';\nimport Chart from '../Chart/Chart';\nconst ExpensesChart = (props) => {\n   const chartDataPoints = [\n      { label: 'Jan', value: 0 },\n      { label: 'Feb', value: 0 },\n      { label: 'Mar', value: 0 },\n      { label: 'Apr', value: 0 },\n      { label: 'May', value: 0 },\n      { label: 'Jun', value: 0 },\n      { label: 'Jul', value: 0 },\n      { label: 'Aug', value: 0 },\n      { label: 'Sep', value: 0 },\n      { label: 'Oct', value: 0 },\n      { label: 'Nov', value: 0 },\n      { label: 'Dec', value: 0 },\n   ];\n\n   for (const expense of props.expenses) {\n      const expenseMonth = expense.date.getMonth();\n      chartDataPoints[expenseMonth].value += expense.amount;\n   }\n\n   return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import './Expenses.css';\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from '../filter/ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\n\nconst Expenses = (props) => {\n   const [filteredYear, setFilterYear] = useState('2021');\n\n   const filterChangeHandler = (year) => {\n      setFilterYear(year);\n   };\n\n   const filteredExpenses = props.items.filter((item) => {\n      return item.date.getFullYear().toString() === filteredYear;\n   });\n\n   return (\n      <div>\n         <Card className=\"expenses\">\n            <ExpensesFilter\n               selected={filteredYear}\n               onChangeFilter={filterChangeHandler}\n            />\n            <ExpensesChart expenses={filteredExpenses} />\n            <ExpensesList items={filteredExpenses} />\n         </Card>\n      </div>\n   );\n};\n\nexport default Expenses;\n","import React, { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst NewExpenseFrom = (props) => {\n   const [enteredTitle, setEnteredTitle] = useState('');\n   const [enteredAmount, setEnteredAmount] = useState('');\n   const [enteredDate, setEnteredDate] = useState('');\n\n   // const [userInput, setUserInput] = useState({\n   //    enteredTitle: '',\n   //    enteredAmount: '',\n   //    enteredDate: '',\n   // });\n\n   const titleChangeHandler = (event) => {\n      setEnteredTitle(event.target.value);\n      // setUserInput({\n      //    ...userInput,\n      //    enteredTitle: event.target.value,\n      // });\n   };\n\n   const dateChangeHandler = (event) => {\n      console.log(event.target.value);\n      setEnteredDate(event.target.value);\n      // setUserInput({\n      //    ...userInput,\n      //    enteredDate: event.target.value,\n      // });\n\n      // setUserInput((prevState) => {\n      //    return { ...prevState, enteredDate: event.target.value };\n      // });\n   };\n   const amountChangeHandler = (event) => {\n      setEnteredAmount(event.target.value);\n      // setUserInput({\n      //    ...userInput,\n      //    enteredAmount: event.target.value,\n      // });\n   };\n   const submitHandler = (event) => {\n      event.preventDefault();\n\n      const newExpense = {\n         title: enteredTitle,\n         amount: +enteredAmount,\n         date: new Date(enteredDate),\n      };\n\n      props.onSaveExpenseData(newExpense);\n\n      // console.log(newExpense);\n      setEnteredTitle('');\n      setEnteredAmount('');\n      setEnteredDate('');\n\n      props.onCancel();\n   };\n\n   return (\n      <form onSubmit={submitHandler}>\n         <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n               <label>Title</label>\n               <input\n                  type=\"text\"\n                  required\n                  value={enteredTitle}\n                  onChange={titleChangeHandler}\n               />\n            </div>\n            <div className=\"new-expense__control\">\n               <label>Amount</label>\n               <input\n                  type=\"number\"\n                  min=\"0.01\"\n                  step=\"0.01\"\n                  required\n                  value={enteredAmount}\n                  onChange={amountChangeHandler}\n               />\n            </div>\n            <div className=\"new-expense__control\">\n               <label>Date</label>\n               <input\n                  type=\"date\"\n                  min=\"2019-01-01\"\n                  max=\"2022-12-31\"\n                  required\n                  value={enteredDate}\n                  onChange={dateChangeHandler}\n               />\n            </div>\n         </div>\n         <div className=\"new-expense__action\">\n            <button type=\"button\" onClick={props.onCancel}>\n               Cancel\n            </button>\n            <button type=\"submit\">Add Expense</button>\n         </div>\n      </form>\n   );\n};\n\nexport default NewExpenseFrom;\n","import React, { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = (props) => {\n   const onSaveExpenseDataHandler = (data) => {\n      const newExpense = {\n         ...data,\n         id: Math.random().toString(),\n      };\n      console.log(newExpense);\n      props.onAddExpense(newExpense);\n   };\n\n   const [isEditing, setIsEditing] = useState(false);\n\n   const startEditing = () => {\n      setIsEditing(true);\n   };\n\n   const stopEditing = () => {\n      setIsEditing(false);\n   };\n\n   return (\n      <div className=\"new-expense\">\n         {!isEditing && (\n            <button onClick={startEditing} type=\"button\">\n               Add a new Expense\n            </button>\n         )}\n         {isEditing && (\n            <ExpenseForm\n               onCancel={stopEditing}\n               onSaveExpenseData={onSaveExpenseDataHandler}\n            />\n         )}\n      </div>\n   );\n};\n\nexport default NewExpense;\n","import Expenses from './components/Expenses/Expenses';\nimport React, { useState } from 'react';\nimport NewExpense from './components/NewExpenses/NewExpenses';\nimport ExpensesFilter from './components/filter/ExpensesFilter';\n\nconst DUMMY = [\n   {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n   },\n   {\n      id: 'e2',\n      title: 'New TV',\n      amount: 799.49,\n      date: new Date(2021, 2, 12),\n   },\n   {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n   },\n   {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n   },\n];\n\nconst App = () => {\n   const [expenses, setExpenses] = useState(DUMMY);\n\n   const saveExpenseDataHandler = (newItem) => {\n      setExpenses((prevExpenses) => {\n         return [newItem, ...prevExpenses];\n      });\n   };\n\n   return (\n      <div>\n         <NewExpense onAddExpense={saveExpenseDataHandler} />\n         <Expenses items={expenses} />\n      </div>\n   );\n\n   // return React.createElement(\n   //    'div',\n   //    {},\n   //    React.createElement('h1', {}, 'Expense React app'),\n   //    React.createElement(Expenses, { expenses: expenses })\n   // );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}